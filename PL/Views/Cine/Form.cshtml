@model ML.Cine
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h2 class="text-center">Formulario de cine</h2>
<hr />
<style>
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>
<body>
    <div>
        @using (Html.BeginForm("Form", "Cine", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model=>model.IdCine)
            <div class="row mb-3">
                <div class="col col-4">
                    @Html.LabelFor(model=>model.Nombre)
                    @Html.TextBoxFor(model=>model.Nombre, new {@class="form-control"})
                </div>
                <div class="col col-4">
                    @Html.LabelFor(model=>model.Zona.IdZona)
                    @Html.DropDownListFor(model=>model.Zona.IdZona,new SelectList(Model.Zona.Zonas,"IdZona","Nombre"),"Selecciona una zona", new {@class="form-control"})
                </div>
                <div class="col col-4">
                    @Html.LabelFor(model=>model.Ventas)
                    @Html.TextBoxFor(model=>model.Ventas, new {@class="form-control"})
                </div>
            </div>
            <div class="align-items-center">
                @Html.LabelFor(model=>model.Direccion)
                @Html.TextBoxFor(model=>model.Direccion, new {@class="form-control", @id="direccion", @readonly=true, @placeholder="Selecciona una ubicación en el mapa"})<br>
                <button class="btn btn-success" type="submit">Guardar</button>
                <a class="btn btn-danger" href="@Url.Action("GetAll","Cine")">Volver</a>
                <div id="map" class="border-top">
                </div>
                <script>
                    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
                        ({ key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw", v: "beta" });
                </script>
            </div>
            <div>
            </div>
        }
    </div>
    <script type="text/javascript">
        // Initialize and add the map
        let map;

        async function initMap() {
            // The location of Uluru
            var position = { lat: 19.42847, lng: -99.12766 };

            var direccion = document.getElementById("direccion").value;

            // Request needed libraries.
            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerView } = await google.maps.importLibrary("marker");

            // The map, centered at Uluru
            map = new Map(document.getElementById("map"), {
                zoom: 14,
                center: position,
                mapId: "DEMO_MAP_ID",
            });

            if (direccion == "") {
                const marker = new google.maps.Marker({
                    map: map,
                    position: position,
                    title: "Selecciona una ubicación en el mapa",
                });
                // Agregar un evento de clic en el mapa
                map.addListener("click", function (event) {
                    // Obtener las coordenadas del clic
                    const latLng = event.latLng;

                    // Establecer la posición del marcador en el lugar del clic
                    marker.setPosition(latLng);

                    const geocoder = new google.maps.Geocoder();
                    geocoder.geocode({ location: latLng }, function (results, status) {
                        if (status === "OK" && results[0]) {
                            const direccion = results[0].formatted_address;
                            document.getElementById("direccion").value = direccion;
                        } else {
                            document.getElementById("direccion").value = "Sitio no reconocido.";
                        }
                    });
                });
            }
            else {
                var geocoder = new google.maps.Geocoder();

                geocoder.geocode({ 'address': direccion }, function (results, status) {
                    if (status === 'OK') {
                        var resultados = results[0].geometry.location,
                            resultados_lat = resultados.lat(),
                            resultados_long = resultados.lng();

                        map.setCenter(results[0].geometry.location);
                        
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location
                        });

                        // Agregar un evento de clic en el mapa
                        map.addListener("click", function (event) {
                            // Obtener las coordenadas del clic
                            const latLng = event.latLng;

                            // Establecer la posición del marcador en el lugar del clic
                            marker.setPosition(latLng);

                            const geocoder = new google.maps.Geocoder();
                            geocoder.geocode({ location: latLng }, function (results, status) {
                                if (status === "OK" && results[0]) {
                                    const direccion = results[0].formatted_address;
                                    document.getElementById("direccion").value = direccion;
                                } else {
                                    document.getElementById("direccion").value = "Sitio no reconocido.";
                                }
                            });
                        });
                    } else {
                        var mensajeError = "";
                        if (status === "ZERO_RESULTS") {
                            mensajeError = "No hubo resultados para la dirección ingresada.";
                        } else if (status === "OVER_QUERY_LIMIT" || status === "REQUEST_DENIED" || status === "UNKNOWN_ERROR") {
                            mensajeError = "Error general del mapa.";
                        } else if (status === "INVALID_REQUEST") {
                            mensajeError = "Error de la web. Contacte con Name Agency.";
                        }
                        alert(mensajeError);
                    }
                });
            }

        }
        initMap();
    </script>
</body>
