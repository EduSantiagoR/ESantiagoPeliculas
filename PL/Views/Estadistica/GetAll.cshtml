@model ML.Cine
@{
    ViewData["Title"] = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 class="text-center">Estadistica</h1>
<hr />
<head>

</head>
<style>
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>
<div>
    <p class="text-center">Todos los cines</p>
    @foreach (ML.Cine cine in Model.Cines)
    {
        <div>
            <input value="@cine.Direccion" class="input-direccion" name="direcciones" id="direcciones" hidden />
            <label hidden class="lbl-info">Nombre: @cine.Nombre, Ventas Totales: $ @cine.Ventas, Zona: @cine.Zona.Nombre</label>
            @if(cine.Zona.Nombre == "Norte")
            {
                <input hidden class="input-ventas-norte" value="@cine.Ventas" />
            }
            @if (cine.Zona.Nombre == "Sur")
            {
                <input hidden class="input-ventas-sur" value="@cine.Ventas" />
            }
            @if(cine.Zona.Nombre == "Este")
            {
                <input hidden class="input-ventas-este" value="@cine.Ventas" />
            }
            @if (cine.Zona.Nombre == "Oeste")
            {
                <input hidden class="input-ventas-oeste" value="@cine.Ventas" />
            }
            <input hidden class="input-ventas-total" value="@cine.Ventas" />
        </div>
    }
    <div id="map">
    </div>
    <script>
        (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
            ({ key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw", v: "beta" });
    </script>
</div>
<script>
    var sumaTotal = 0
    var sumaTotalNorte = 0
    var sumaTotalSur = 0
    var sumaTotalEste = 0
    var sumaTotalOeste = 0
    //sumamos todas las ventas
    var ventasTotal = document.querySelectorAll(".input-ventas-total");
    ventasTotal.forEach(function(input){
        sumaTotal = sumaTotal + parseFloat(input.value)
    });

    var ventasTotalNorte = document.querySelectorAll(".input-ventas-norte");
    ventasTotalNorte.forEach(function (input) {
        sumaTotalNorte = sumaTotalNorte + parseFloat(input.value)
    });

    var ventasTotalSur = document.querySelectorAll(".input-ventas-sur");
    ventasTotalSur.forEach(function (input) {
        sumaTotalSur = sumaTotalSur + parseFloat(input.value)
    });

    var ventasTotalEste = document.querySelectorAll(".input-ventas-este");
    ventasTotalEste.forEach(function (input) {
        sumaTotalEste = sumaTotalEste + parseFloat(input.value)
    });

    var ventasTotalOeste = document.querySelectorAll(".input-ventas-oeste");
    ventasTotalOeste.forEach(function (input) {
        sumaTotalOeste = sumaTotalOeste + parseFloat(input.value)
    });
    
    var porcentajeNorte = 100*(sumaTotalNorte/sumaTotal);
    var porcentajeSur = 100*(sumaTotalSur/sumaTotal);
    var porcentajeEste = 100*(sumaTotalEste/sumaTotal);
    var porcentajeOeste = 100*(sumaTotalOeste/sumaTotal);

    //Grafica
    window.onload = function () {

        var options = {
            title: {
                text: "Ventas de cines"
            },
            subtitles: [{
                text: "Todas las zonas"
            }],
            animationEnabled: true,
            data: [{
                type: "pie",
                startAngle: 40,
                toolTipContent: "<b>{label}</b>: {y}%",
                showInLegend: "true",
                legendText: "{label}",
                indexLabelFontSize: 16,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: porcentajeNorte, label: "Norte" },
                    { y: porcentajeSur, label: "Sur" },
                    { y: porcentajeEste, label: "Este" },
                    { y: porcentajeOeste, label: "Oeste" }
                ]
            }]
        };
        $("#chartContainer").CanvasJSChart(options);
    }
</script>
<div id="chartContainer" style="height: 300px; width: 100%;"></div>

<script type="text/javascript">
    //Obtener la lista de inputs con las direcciones
    var direccionesList = document.querySelectorAll(".input-direccion");
    var infoList = document.querySelectorAll(".lbl-info");
    let map;
    async function initMap() {
        // The location of Uluru
        var position = { lat: 19.42847, lng: -99.12766 };

            // Request needed libraries.
        const { Map } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerView } = await google.maps.importLibrary("marker");

            // The map, centered at Uluru
        map = new Map(document.getElementById("map"), {
                zoom: 10,
                center: position,
                mapId: "DEMO_MAP_ID",
        });
        var contador = 0

        //Crear los markers
        direccionesList.forEach(function (input) {
            
            var direccion = input.value
            var index = contador;

            var geocoder = new google.maps.Geocoder();

            geocoder.geocode({ 'address': direccion }, function (results, status) {
                if (status === 'OK') {
                    var resultados = results[0].geometry.location,
                        resultados_lat = resultados.lat(),
                        resultados_long = resultados.lng();

                    map.setCenter(results[0].geometry.location);

                    const infowindow = new google.maps.InfoWindow({
                        content: infoList[index].innerText,
                        ariaLabel: "Uluru",
                    });

                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                    marker.addListener("click", () => {
                        infowindow.open({
                            anchor: marker,
                            map,
                        });
                    });

                } else {
                    var mensajeError = "";
                    if (status === "ZERO_RESULTS") {
                        mensajeError = "No hubo resultados para la dirección ingresada.";
                    } else if (status === "OVER_QUERY_LIMIT" || status === "REQUEST_DENIED" || status === "UNKNOWN_ERROR") {
                        mensajeError = "Error general del mapa.";
                    } else if (status === "INVALID_REQUEST") {
                        mensajeError = "Error de la web. Contacte con Name Agency.";
                    }
                    alert(mensajeError);
                }
            });
            contador = contador + 1;
        });
    }
    initMap();
</script>
